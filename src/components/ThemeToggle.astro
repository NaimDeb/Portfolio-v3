---
import Icon from "./ui/Icon/Icon.astro";
---
<!-- Element ThemeToggle pour un bouton qui permet de changer le thème de la page -->
<!-- TODO : changer style légèrement -->

<theme-toggle>
<button class="block relative w-[3.5em] h-[2em]">
  <input 
    type="checkbox" 
    class="opacity-0 w-0 h-0"
  />
  <span 
    aria-pressed="false"
    class="absolute cursor-pointer inset-0 bg-slate-100 transition-all duration-400 rounded-[30px]
    before:absolute before:content-[''] before:h-[1.4em] before:w-[1.4em] before:rounded-[20px] 
    before:left-[0.3em] before:top-1/2 before:-translate-y-1/2
    before:bg-gradient-to-r before:from-[#ff0080] before:to-[#ff8c00] before:transition-all before:duration-400
    aria-pressed:bg-[#303136]
    aria-pressed:before:left-[calc(100%-1.7em)]
    aria-pressed:before:bg-[#303136]
    aria-pressed:before:shadow-[inset_-3px_-2px_5px_-2px_#8983f7,inset_-10px_-4px_0_0_#a3dafb]"
  ></span>
</button>
</theme-toggle>



<script>
  // Compris
  class ThemeToggle extends HTMLElement {
    constructor() {
      super();

      const button = this.querySelector("button")!;
      const span = button.querySelector("span")!;

      /** Set the theme to dark/light mode. */
      const setTheme = (dark: boolean) => {
        document.documentElement.classList[dark ? "add" : "remove"](
          "dark"
        );
        span.setAttribute("aria-pressed", String(dark));
      };

      // Toggle the theme when a user clicks the button.
      button.addEventListener("click", () => setTheme(!this.isDark()));

      // Initialize button state to reflect current theme.
      setTheme(this.isDark());
    }

    isDark() {
      return document.documentElement.classList.contains("dark");
    }
  }
  customElements.define("theme-toggle", ThemeToggle);
</script>
